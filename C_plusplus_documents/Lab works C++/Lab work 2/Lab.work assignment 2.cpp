/* 1.Однажды в просторах рунета появился следующий ребус:

     157892 = 3
     203516 = 2
     409578 = 4
     236271 = ?
Никто так и не смог его разгадать. 
Позже оказалось, что число в правом столбце равно сумме "кругляшей", 
которые есть в цифрах числа, расположенного слева. Ваша задача написать программу, которая определяет, сколько кругляшей в числе.
*/


/*#include <iostream>
using namespace std;

int main()
{
	string n;
	cin >> n;
	
	int a=0;
	for(int i=0; i<n.size(); ++i)
	{
		if(n[i] == '0')
		{
			++a;
		}
		if(n[i] == '6')
		{
			++a;
		}
		if(n[i] == '8')
		{
			a+=2;
		}
		if(n[i] == '9')
		{
			++a;
		}
	}
	cout << a;
}
*/


/* 3.Требуется найти самую длинную непрерывную цепочку нулей в последовательности нулей и единиц.
*/

/*#include <iostream>
using namespace std;

int main()
{
	string a;
	cin >> a;
	
	a += '1';
	int n=0,max=0;
	for(int i=0; i<a.size();++i)
	{
		if(a[i] == '0')
		{
		
		++n;}
		else
		{
			if(n>max)
			{
			max=n;
			n=0;}
			
		}
	}
	
	cout << max;
}
*/



/* 4.Геннадий учится в сельской школе и мечтает стать агрономом. 
На уроке геометрии Геннадий познакомился с новой фигурой – прямоугольником. 
Освоив вычисление площади прямоугольника, 
Гена подумал о том, что квадратные поля гораздо удобнее, нежели прямоугольные. 
Поразмыслив еще немного, Гена столкнулся с интересной задачей: существует ли такое 
квадратное поле, у которого площадь в точности равна площади заданного поля 
прямоугольной формы, чтобы при этом длины сторон обеих полей были бы целыми числами?
2*8=16
n=4
*/


/*#include <iostream>
#include <cmath>
using namespace std;

int main()
{
	long int a, b, s;
	double n;
	cin >> a >> b;
	s=a*b;
	n=sqrt(s);
	if(n==(long int) n)
	{
		cout << (long int ) n << endl;
	}
	else
	{
		cout << 0 << endl;
	}
	return 0;
}
*/


/* 5.На стандартной шахматной доске 8х8 заданы координаты двух клеток. 
Требуется определить: имеют ли данные клетки одинаковый цвет?
x1, y1 && x2, y2
x1+y1%2=x2+y2%2
*/

/*#include <iostream>
using namespace std;

int main()
{
	int x1,y1,x2,y2;
	cout << "X1: ";
	cin >> x1;
	cout << "Y1: ";
	cin >> y1;
	cout << "X2: ";
	cin >> x2;
	cout << "Y2: ";
	cin >> y2;
	
	if((x1+y1)%2 == (x2+y2)%2)
	{
		cout << "Yes";
	}
	else
	{
		cout << "No";
	}
	
	return 0;
}
*/


/*8.Уставшие от необычно теплой зимы, жители решили узнать, 
действительно ли это самая длинная оттепель за всю историю наблюдений за погодой.
 Они обратились к синоптикам, а те, в свою очередь, занялись исследованиями статистики 
 за прошлые годы. Их интересует, сколько дней длилась самая длинная оттепель
 
 */
 
 
/*#include <iostream>
using namespace std;

int main()
{
	int N,t, bs=0, bs_max=0;
	
	cin >> N;
	
	for(int i=0; i<N; ++i)
	{
		cin >> t;
		if(t>0)
		{
			++bs;
		}
		else
		{
			bs=0;
		}
		if(bs>bs_max)
		{
			bs_max=bs;
		}
	}
	
	cout << bs_max;
	
}
*/

/*10.Последовательность чисел a1, a2, …, ai,… называется Фибоначчиевой, 
если для всех i ≥ 3 верно, что ai=ai-1+ai-2, то есть каждый член последовательности
 (начиная с третьего) равен сумме двух предыдущих.
*/

/*#include <iostream>
using namespace std;

int main()
{
	int a, b, n, c;
	
	cin >> n >> a >> b;
	
	while(n>1)
	{
		--n;
		c=b-a;
		b=a;
		a=c;
	}
	
	//for(int i=0; i<n; ++i)
	//{
	//	c=b-a;
	//	b=a;
	//	a=c;
	//}
	cout << a << " " << b;
}
*/


/* 11.Цена проезда в автобусах нашего города — один рубль. 
Однако, не все так просто — каждый взрослый пассажир имеет право провезти 
бесплатно не более одного ребенка. Это значит, что взрослый пассажир, который провозит с 
собой k (k > 0) детей, платит всего k рублей: за один билет для себя и за (k - 1) 
билетов для своих детей. Также взрослый может ехать без детей, 
в этом случае он платит всего один рубль. Известно, что дети не могут проезжать в автобусе 
без сопровождения взрослых.
1  2
2  1+2-1=2

0 5
imp

2 2
2 2+2-1=3
*/

/*#include <iostream>
using namespace std;

int main()
{
	int n,m;
	cout << "Kolichestvo vzroslyh: ";
	cin >> n;
	cout << "Kol-vo detey: ";
	cin >> m;
	
	if((n==0)&&(m>0))
	{
		cout << "Impossible";
	}
	else if(m==0)
	{
		cout << n << " " << n;
	}
	
	else if(n>m) // 8 5
	{
		cout << n << " " << n+(m-1); 
	}
	
	else // 1 8   
	{
		cout << n << " " << n+(m-1);
	}
	
	return 0;
}
*/


/*14.Аня разделила доску размера m × n на клетки размера 1×1 и раскрасила их в черный и 
белый цвет в шахматном порядке. Васю заинтересовал вопрос: клеток какого цвета 
получилось больше – черного или белого.

Для того чтобы выяснить это, он спросил у Ани, 
в какой цвет она раскрасила j-ю клетку в i-м ряду доски. 
По этой информации Вася попытался определить, клеток какого цвета на доске больше.

Требуется написать программу, которая по размерам доски и цвету j-й клетки в i-м ряду 
определит, клеток какого цвета на доске больше — черного или белого.
3 5 1 1 0  black
3 5 2 1 0 white
4 4 1 1 1 equal
*/


/*#include <iostream>
using namespace std;

int main()
{
	int m,n,i,j,c;
	cin >> m >> n >> i >> j >> c;
	
	if(n*m%2==0)
	{
		cout << "Equal";
	}
	else if((i+j)%2 == c)
	{
		cout << "Black";
	}
	else
	{
		cout << "White";
	}
	
	return 0;
}
*/



/*15. На бесконечной вправо и вверх шахматной доске находится ладья. 
Два игрока передвигают ее по очереди. За один ход разрешено сдвинуть ладью вниз или влево 
на произвольное (ненулевое) количество клеток так, чтобы ладья не покинула доску. 
Цель игры – переместить ладью в левый нижний угол, то есть клетку с координатами (1,1). 
Известно, что оба игрока придерживаются оптимальной стратегии. 
Игрок №1 ходит первым, при этом он обязан совершить хотя бы один ход. 
Если первый ход сделать нельзя, то определить победителя также невозможно. 
Требуется написать программу, которая найдет номер победившего игрока, либо определит, 
что этого сделать нельзя.
*/

/*#include <iostream>
using namespace std;

int main()
{
	int x, y;
	cin >> x >> y;
	if((x==1 ) && (y==1 ))
	{
		cout << "0";
	}
	else if(x==y)
	{
		cout << "2";
	}
	else
	{
		cout << "1";
	}
}
*/


/*16.Некоторые из вас, наверно, знают, что ежегодно проводится чемпионат мира по программированию среди студентов (http://acm.baylor.edu).
 В финал этого соревнования проходят около 80 команд со всего мира. Каждая команда состоит из трех человек и имеет название. 
 Напишите программу, которая по краткому названию команды и фамилиям ее участников,  строит полное название команды.
Полное название команды состоит из краткого названия команды и списка фамилий ее участников. 
Фамилии участников в списке должны быть упорядочены по алфавиту и отделены друг от друга запятыми. 
Название команды от фамилий участников должно быть отделено двоеточием. 
После каждого знака препинания должен стоять ровно один пробел.
Dream Team
Knuth
Dijkstra
Cormen
*/

/*#include <iostream>
#include <algorithm>
using namespace std;

int main()
{
	string name;
	string team[3];
	
	getline(cin, name);
	for(int i=0; i<3; ++i)
	{
		getline(cin, team[i]);
	}
	sort(team, team+3);
	cout << name << ": " << team[0] << ", " << team[1] << ", " << team[2] << endl;
	
	return 0;
}
*/

/*20 В доме Вилли установили скоростной лифт новой экспериментальной модели. 
В этом лифте кнопки с номерами этажей заменены двумя другими кнопками. 
При нажатии на первую кнопку лифт поднимается на один этаж вверх, 
а при нажатии на вторую – опускается на один этаж вниз.
*/


/*#include <iostream>
using namespace std;

int main()
{
	string s;
	cin >> s;
	
	int max=0,min=0,t=0;
	
	for(int i=0; i<s.size();++i)
	{
		if(s[i] == '1')
		{
			++t;
		}
		else
		{
			--t;
		}
		if(t>max)
		{
			max = t;
		}
		if(t<min)
		{
			min = t;
		}
	}
	cout << max-min + 1;
}
*/


/*22. Студент Василий живет в общежитии. 
Отделение банка, в котором он производит оплату за проживание, имеет всего две кассы, 
поэтому почти всегда длинная очередь к ним. 
Первая касса открывается в 8.00, вторая – в 8.05. Последний клиент будет принят в 20.00. 
Очередь единая, и очередной клиент обслуживается, как только освобождается одна из касс. 
На обслуживание одного клиента уходит ровно 10 минут. Василий приходит ровно в 8.00 и видит, сколько человек стоит перед ним. 
Требуется определить, сколько времени ему придется простоять в очереди, 
и вообще обслужат ли его сегодня.
Каждый час 12 клиентов
12*12=144 клиентов за все 12 часов
*/

/*#include <iostream>
using namespace std;

int main()
{
	int n;
	cin >> n;
	
	if(n>144)
	{
		cout << "No";
		return 0;
	}
	int t=n*5-5;
	cout << t/60 << " " << t%60 << endl;
	
	return 0;
}
*/

/*23.Петя и Маша пришли в зоопарк. Больше всего Пете понравились цапли. 
Он был поражен их способностью спать на одной ноге. В вольере находятся несколько цапель. 
Некоторые из них стоят на двух ногах, некоторые — на одной. 
Когда цапля стоит на одной ноге, то другую ее ногу не видно. 
Петя пересчитал видимые ноги всех цапель, и у него получилось число a. 
Через несколько минут к вольеру подошла Маша. За это время некоторые цапли могли поменять 
позу, поэтому Петя предложил ей заново пересчитать видимые ноги цапель. 
Когда Маша это сделала, у нее получилось число b. Выйдя из зоопарка, Петя с Машей заинтересовались, сколько же всего цапель было в вольере. 
Вскоре ребята поняли, что однозначно определить это число можно не всегда. 
Теперь они хотят понять, какое минимальное и какое максимальное количество 
цапель могло быть в вольере.
3 4 = 2 3 
*/

/*#include <iostream>
using namespace std;

int main()
{
	int a,b,n;
	cin >> a >> b;
	
	n=max(a,b)/2;
	
	cout << n << " " << min(a,b);
	
	return 0;
}
*/

/*26.В доме живет N жильцов. Однажды решили провести перепись всех жильцов данного дома 
и составили список, в котором указали возраст и пол каждого жильца. 
Требуется найти номер самого старшего жителя мужского пола.
4
25 1
70 1        	2
100 0
3 1
*/

/*#include <iostream>
using namespace std;

int main()
{
	int N, age, pol, max=0, k;
	cin >> N;
	
	for(int i=0; i<N; ++i)
	{
		cin >> age >> pol;
		if((pol==1) && (age>max))
		{
			max = age;
			k=i+1;
		}
	}
	cout << k;
}
*/

/*28. Задано время отправления поезда и время в пути до конечной станции.
 Требуется написать программу, которая найдет время прибытия этого поезда 
 (возможно, в другие сутки).
00:00
			10:10
10 10 


00:50
		10 80 10+1=11 11:20    
10 30   

11:20
		33 65 33+1=34 10 5 = 10:05
22 45

11:20
		33 45 33+0=33 9 45 = 9:45 
22 25 
 */
 
/*#include <iostream>
using namespace std;

int main()
{
	int t1, t2;
	int h, m;
	
	scanf("%d:%d", &t1, &t2);
	
	cin >> h >> m;
	t1 += h;
	t2 += m;
	t1 += t2/60;
	t1 %= 24;
	t2 %= 60;
	
	if(t1<10) cout << "0";
	cout << t1 << ":";
	if(t2<10) cout << "0";
	cout << t2;
	
	return 0;
}
*/

/*29.Всем известно, что многие олимпиадные задачи начинаются со слов «Всем известно». 
Но мало кто знает, что начинающему программисту Паше такие задачи меньше всего нравятся.
 Потому что обычно после слов «всем известно» описывается такой факт, 
 о котором он даже не догадывался. После очередной подобной задачи Паша решил проверить, 
 а действительно ли всем известно, что сумма первых N нечетных чисел равняется N2:
 11111101010011
 */
 
/*#include <iostream>
using namespace std;

int main()
{	
	string s;
	cin >> s;
	
	for(int i=0; i<s.length(); ++i)
	{
		if(s[i] == '0')
		{
			cout << "No";
			return 0;
		}
	}
	cout << "Yes";
	
	return 0;
}
*/


/*30.Иван Васильевич пришел на рынок и решил купить два арбуза: один для себя, а другой для тещи.
 Понятно, что для себя нужно выбрать арбуз потяжелей, а для тещи полегче. 
Но вот незадача: арбузов слишком много и он не знает как же выбрать самый легкий и самый тяжелый арбуз? Помогите ему!
*/


/*#include <iostream>
using namespace std;

int main()
{
	int n, a, min, max=0;
	cout << "Watermelons: ";
	cin >> n;
	for(int i=0; i<n; ++i)
	{
		cin >> a;
		if(a>max)
		{
			max=a;
		}
		if(a<min)
		{
			min=a;
		}
	}
	cout << min << " " << max;
	
	return 0;
}
*/
